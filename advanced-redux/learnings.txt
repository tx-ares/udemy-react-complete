In redux, reducers are functions that handle state changes.  It takes the current state and an action as arguments and return a new state object.  
It's crucial that reducers remain pure functions, meaning they don't have side effects and always produce the same output for the same input.

It's main function is to return a new state object to replace the current state object as the new updated state.  

In this project, I'll make use of the reduxjs toolkit package, which provides optional tools for managing state easier.  With it, we can create 'slices' of state which can mutate the state object from within if needed since the createSlice 
method actually handles the creating of a new state object for us. It's important to understand what it is doing under the hood and not mistake that it isn't following redux's rules of reducer functions.